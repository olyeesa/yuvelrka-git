
&НаКлиенте
Процедура ЗаказыВМастерскуюВыборПриИзменении(Элемент)
	ТекСтрокаЗаказыВМастерскую = Элементы.ЗаказыВМастерскую.ТекущиеДанные;
	Для каждого СтрЗаказыВМастерскую Из ЗаказыВМастерскую Цикл
    	Если ТекСтрокаЗаказыВМастерскую.ЗаказКлиента = СтрЗаказыВМастерскую.ЗаказКлиента Тогда
			СтрЗаказыВМастерскую.Выбор = ТекСтрокаЗаказыВМастерскую.Выбор;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Дата = ТекущаяДата();
	ЗаполнитьЗаказыКлиентовНаСервере();
КонецПроцедуры

#КонецОбласти

Процедура ЗаполнитьЗаказыКлиентовНаСервере()
   ДокЗаказы = Документы.ЗаказКлиента.Выбрать(НачалоДня(Дата),КонецДня(Дата));
   НомерСтроки = 0;
   Пока ДокЗаказы.Следующий() Цикл
	   если НЕ ДокЗаказы.Состояние = Перечисления.СостояниеЗаказов.Завершен тогда
		      ТекСтрокаЗаказы 					= ЗаказыКлиентов.Добавить();
			  НомерСтроки 						= НомерСтроки + 1;
			  ТекСтрокаЗаказы.НомерСтроки 		= НомерСтроки;
			  ТекСтрокаЗаказы.ЗаказКлиента 		= ДокЗаказы.Ссылка;
			  ТекСтрокаЗаказы.Клиент 	= ДокЗаказы.Клиент;
			  ТекСтрокаЗаказы.СостояниеЗаказа 	= ДокЗаказы.Состояние;
		конецесли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_ЗаказВМастерскую" Тогда
		Для каждого СтрокаЗаказыКлиентов Из ЗаказыКлиентов Цикл
			если СтрокаЗаказыКлиентов.ЗаказКлиента = Параметр тогда
				ИзменитьСтатусЗаказаКлиентаНаСервере(СтрокаЗаказыКлиентов.ЗаказКлиента);
			конецесли;
		КонецЦикла;
		
		ЗаказыКлиентов.Очистить();
		ЗаполнитьЗаказыКлиентовНаСервере();
		
		Спецификация = ПолучитьСпецификациюНаСервере(Источник);
		Для каждого СтрокаЗаказыВМастерскую Из ЗаказыВМастерскую Цикл
			если СтрокаЗаказыВМастерскую.ЗаказКлиента = Параметр
				и СтрокаЗаказыВМастерскую.Спецификация = Спецификация
				тогда
				СтрокаЗаказыВМастерскую.ЗаказВМастерскую = Источник;
			конецесли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ИзменитьСтатусЗаказаКлиентаНаСервере(ЗаказКлиента);
	ДокЗаказКлиентаОбъект = ЗаказКлиента.ПолучитьОбъект();
	ДокЗаказКлиентаОбъект.Состояние = Перечисления.СостояниеЗаказов.ВРаботе;
	ДокЗаказКлиентаОбъект.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСпецификациюНаСервере(ЗаказВМастерскую)
	Возврат ЗаказВМастерскую.Спецификация;
КонецФункции



#Область Пересчеты
&НаКлиенте
Процедура Обновить(Команда)
	ЗаказыКлиентов.Очистить();
	ЗаказыВМастерскую.Очистить();
	ЗаполнитьЗаказыКлиентовНаСервере();
КонецПроцедуры	


&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ЗаказыКлиентов.Очистить();
	ЗаполнитьЗаказыКлиентовНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ЗаказыКлиентовПриАктивизацииСтроки(Элемент)
	СоставЗаказаКлиента.Очистить();
	Если НЕ ЗаказыКлиентов.Количество() = 0 Тогда
		ТекСтрокаЗаказы = Элементы.ЗаказыКлиентов.ТекущиеДанные;
		ЗаполнитьСоставЗаказовКлиентовНаСервере(ТекСтрокаЗаказы.ЗаказКлиента);
	КонецЕсли;
КонецПроцедуры 

Процедура ЗаполнитьСоставЗаказовКлиентовНаСервере(ЗаказКлиента) 
	НомерСтроки = 0;
	Для каждого СтрокаТЧ Из ЗаказКлиента.ЗаказанныеИзделия Цикл
		СтрокаСоставЗаказа 				= СоставЗаказаКлиента.Добавить();
		НомерСтроки 					= НомерСтроки + 1;
		СтрокаСоставЗаказа.НомерСтроки 	= НомерСтроки;
		СтрокаСоставЗаказа.Изделие 		= СтрокаТЧ.Изделие;
		СтрокаСоставЗаказа.Спецификация = СтрокаТЧ.Спецификация;
		СтрокаСоставЗаказа.Количество 	= СтрокаТЧ.Количество;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗаказыВМастерскую(Команда)
	Если НЕ ЗаказыКлиентов.Количество () = 0 Тогда
		ЗаказыВМастерскую.Очистить();
		ЗаполнитьЗаказыВМастерскуюНаСервере();
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьЗаказыВМастерскуюНаСервере()
	Для каждого СтрокаЗаказыКлиентов Из ЗаказыКлиентов Цикл
		Если СтрокаЗаказыКлиентов.СостояниеЗаказа = Перечисления.СостояниеЗаказов.Заказан Тогда
			Для каждого СтрокаСоставЗаказа Из СтрокаЗаказыКлиентов.ЗаказКлиента.ЗаказанныеИзделия Цикл 
				СтрокаЗаказыВМастерскую 			 = ЗаказыВМастерскую.Добавить();
				СтрокаЗаказыВМастерскую.ЗаказКлиента = СтрокаЗаказыКлиентов.ЗаказКлиента;
		    	СтрокаЗаказыВМастерскую.Изделие		 =  СтрокаСоставЗаказа.Изделие;
				СтрокаЗаказыВМастерскую.Спецификация = СтрокаСоставЗаказа.Спецификация;
				СтрокаЗаказыВМастерскую.Количество	 =  СтрокаСоставЗаказа.Количество;
			КонецЦикла;		
		КонецЕсли;
	КонецЦикла;
	ЗаказыВМастерскую.Сортировать("Изделие");
	НомерСтроки = 0;
	Для каждого Стр Из ЗаказыВМастерскую Цикл
		НомерСтроки 	= НомерСтроки + 1;
		Стр.НомерСтроки = НомерСтроки;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура СформироватьЗаказыВМастерскую(Команда)
	Если НЕ ЗаказыВМастерскую.Количество() = 0  Тогда
		Для каждого СтрокаЗаказыВМастерскую Из ЗаказыВМастерскую Цикл
			Если СтрокаЗаказыВМастерскую.Выбор тогда
	    		ФормаЗаказВМастерскую 						= ОткрытьФорму("Документ.ЗаказВМастерскую.Форма.ФормаДокумента",
	   													, ЭтаФорма,Новый УникальныйИдентификатор);
				ФормаЗаказВМастерскую.Объект.Дата 			= Дата;
				ФормаЗаказВМастерскую.Объект.Изделие 			= СтрокаЗаказыВМастерскую.Изделие;
	   			ФормаЗаказВМастерскую.Объект.Спецификация 	= СтрокаЗаказыВМастерскую.Спецификация;
	    		ФормаЗаказВМастерскую.Объект.Потребность 	= СтрокаЗаказыВМастерскую.Количество;
				ФормаЗаказВМастерскую.Объект.ЗаказКлиента 	= СтрокаЗаказыВМастерскую.ЗаказКлиента;
				ФормаЗаказВМастерскую.ЗаполнитьМатериалыНаСервере();
				ФормаЗаказВМастерскую.ЗаполнитьОперацииНаСервере();
				ФормаЗаказВМастерскую.Записать();
			КонецЕсли;		
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Для каждого Стр Из ЗаказыВМастерскую Цикл
		Стр.Выбор = Истина;	
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура СнятьФлажки(Команда)
	Для каждого Стр Из ЗаказыВМастерскую Цикл
		Стр.Выбор = Ложь;	
	КонецЦикла
КонецПроцедуры



#КонецОбласти
